services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network

  backend:
    build:
      context: ../AI-Airport-Bot
      dockerfile: Dockerfile
    container_name: fastapi_app
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql+psycopg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SPREADSHEET_ID: ${SPREADSHEET_ID}
      ELEVEN_LABS_API_KEY: ${ELEVEN_LABS_API_KEY}
      ELEVEN_LABS_VOICE_ID: ${ELEVEN_LABS_VOICE_ID}
      AVASHOW_GATEWAY_TOKEN: ${AVASHOW_GATEWAY_TOKEN}
      AVASHOW_API_URL: ${AVASHOW_API_URL}
      EXTERNAL_CHAT_SERVICE_URL: ${EXTERNAL_CHAT_SERVICE_URL}
      EXTERNAL_EXTRACTINFO_SERVICE_URL: ${EXTERNAL_EXTRACTINFO_SERVICE_URL}
      EXTERNAL_ELEVENLABS_SERVICE_URL: ${EXTERNAL_ELEVENLABS_SERVICE_URL}

      PORT: 4000
    ports:
      - "4000:4000"
    volumes:
      - ../AI-Airport-Bot/audios:/app/audios
      - ../AI-Airport-Bot/bin:/app/bin
      - ../AI-Airport-Bot/credentials.json:/app/credentials.json
    networks:
      - app-network

  frontend:
    build:
      context: ../AI-AIrportBot-Front
      dockerfile: Dockerfile
    container_name: frontend_app
    restart: always
    environment:
      NODE_ENV: ${NODE_ENV}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      CIP_TOKEN: ${CIP_TOKEN}
      CIP_BASE_URL: ${CIP_BASE_URL}
      CIP_FLIGHT_SEARCH_BASE_URL: ${CIP_FLIGHT_SEARCH_BASE_URL}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge